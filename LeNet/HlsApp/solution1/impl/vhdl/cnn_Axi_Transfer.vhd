-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_Axi_Transfer is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_data_TVALID : IN STD_LOGIC;
    out_data_TREADY : IN STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    in_data_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    in_data_TREADY : OUT STD_LOGIC;
    out_data_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_data_TVALID : OUT STD_LOGIC;
    value_r : IN STD_LOGIC_VECTOR (31 downto 0);
    loop_r : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_data_TDATA_blk_n : OUT STD_LOGIC;
    out_data_TDATA_blk_n : OUT STD_LOGIC );
end;


architecture behav of cnn_Axi_Transfer is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal loop_read_reg_158 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal in_data_read_reg_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal in_data_read_1_reg_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal p_s_reg_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_1_reg_179 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_2_reg_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal in_data_read_2_reg_189 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal in_data_read_3_reg_195 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal trunc_ln324_1_fu_102_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln324_1_reg_201 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal trunc_ln324_2_fu_110_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln324_2_reg_206 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal trunc_ln324_3_fu_118_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln324_3_reg_211 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal trunc_ln324_4_fu_126_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln324_4_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal trunc_ln324_5_fu_134_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln324_5_reg_221 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal trunc_ln324_6_fu_142_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln324_6_reg_226 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_port_reg_value_r : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln324_fu_67_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal zext_ln324_fu_106_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage5_01001 : BOOLEAN;
    signal zext_ln324_1_fu_114_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage6_01001 : BOOLEAN;
    signal zext_ln324_2_fu_122_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage7_01001 : BOOLEAN;
    signal zext_ln324_3_fu_130_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage8_01001 : BOOLEAN;
    signal zext_ln324_4_fu_138_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage9_01001 : BOOLEAN;
    signal zext_ln324_5_fu_154_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_541 : BOOLEAN;
    signal ap_condition_544 : BOOLEAN;
    signal ap_condition_548 : BOOLEAN;
    signal ap_condition_551 : BOOLEAN;
    signal ap_condition_555 : BOOLEAN;
    signal ap_condition_558 : BOOLEAN;
    signal ap_condition_562 : BOOLEAN;
    signal ap_condition_565 : BOOLEAN;
    signal ap_condition_376 : BOOLEAN;
    signal ap_condition_382 : BOOLEAN;
    signal ap_condition_388 : BOOLEAN;
    signal ap_condition_394 : BOOLEAN;
    signal ap_condition_400 : BOOLEAN;
    signal ap_condition_406 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage9_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_port_reg_value_r <= value_r;
                in_data_read_reg_162 <= in_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_ce))) then
                in_data_read_1_reg_168 <= in_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_ce))) then
                in_data_read_2_reg_189 <= in_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                in_data_read_3_reg_195 <= in_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                loop_read_reg_158 <= loop_r;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_ce) and (loop_read_reg_158 = ap_const_lv1_0))) then
                p_1_reg_179 <= ap_port_reg_value_r(23 downto 16);
                p_2_reg_184 <= ap_port_reg_value_r(31 downto 24);
                p_s_reg_174 <= ap_port_reg_value_r(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                trunc_ln324_1_reg_201 <= trunc_ln324_1_fu_102_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                trunc_ln324_2_reg_206 <= trunc_ln324_2_fu_110_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                trunc_ln324_3_reg_211 <= trunc_ln324_3_fu_118_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                trunc_ln324_4_reg_216 <= trunc_ln324_4_fu_126_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                trunc_ln324_5_reg_221 <= trunc_ln324_5_fu_134_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                trunc_ln324_6_reg_226 <= trunc_ln324_6_fu_142_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_block_pp0_stage9_subdone, ap_reset_idle_pp0, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_idle_pp0_1to1 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) and (ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, in_data_TVALID)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in_data_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, in_data_TVALID, out_data_TREADY)
    begin
                ap_block_pp0_stage0_11001 <= (((out_data_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in_data_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, in_data_TVALID, out_data_TREADY, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((out_data_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in_data_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID)
    begin
                ap_block_pp0_stage1_01001 <= ((in_data_TVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, ap_block_state2_io)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in_data_TVALID = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, ap_ce, ap_block_state2_io)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in_data_TVALID = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID)
    begin
                ap_block_pp0_stage2_01001 <= ((in_data_TVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, ap_block_state3_io)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in_data_TVALID = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, ap_ce, ap_block_state3_io)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in_data_TVALID = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io))));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_01001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID)
    begin
                ap_block_pp0_stage3_01001 <= ((in_data_TVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, ap_block_state4_io)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in_data_TVALID = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_io)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, ap_ce, ap_block_state4_io)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in_data_TVALID = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_io))));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_01001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID)
    begin
                ap_block_pp0_stage4_01001 <= ((in_data_TVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, ap_block_state5_io)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in_data_TVALID = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state5_io)));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, ap_ce, ap_block_state5_io)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in_data_TVALID = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state5_io))));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_01001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID)
    begin
                ap_block_pp0_stage5_01001 <= ((in_data_TVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, out_data_TREADY)
    begin
                ap_block_pp0_stage5_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((out_data_TREADY = ap_const_logic_0) or (in_data_TVALID = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, out_data_TREADY, ap_ce)
    begin
                ap_block_pp0_stage5_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((out_data_TREADY = ap_const_logic_0) or (in_data_TVALID = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_01001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID)
    begin
                ap_block_pp0_stage6_01001 <= ((in_data_TVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, out_data_TREADY)
    begin
                ap_block_pp0_stage6_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((out_data_TREADY = ap_const_logic_0) or (in_data_TVALID = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, out_data_TREADY, ap_ce)
    begin
                ap_block_pp0_stage6_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((out_data_TREADY = ap_const_logic_0) or (in_data_TVALID = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_01001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID)
    begin
                ap_block_pp0_stage7_01001 <= ((in_data_TVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, out_data_TREADY)
    begin
                ap_block_pp0_stage7_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((out_data_TREADY = ap_const_logic_0) or (in_data_TVALID = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, out_data_TREADY, ap_ce)
    begin
                ap_block_pp0_stage7_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((out_data_TREADY = ap_const_logic_0) or (in_data_TVALID = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_01001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID)
    begin
                ap_block_pp0_stage8_01001 <= ((in_data_TVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, out_data_TREADY)
    begin
                ap_block_pp0_stage8_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((out_data_TREADY = ap_const_logic_0) or (in_data_TVALID = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, out_data_TREADY, ap_ce)
    begin
                ap_block_pp0_stage8_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((out_data_TREADY = ap_const_logic_0) or (in_data_TVALID = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_01001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID)
    begin
                ap_block_pp0_stage9_01001 <= ((in_data_TVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, out_data_TREADY)
    begin
                ap_block_pp0_stage9_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((out_data_TREADY = ap_const_logic_0) or (in_data_TVALID = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, in_data_TVALID, out_data_TREADY, ap_ce)
    begin
                ap_block_pp0_stage9_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((out_data_TREADY = ap_const_logic_0) or (in_data_TVALID = ap_const_logic_0))));
    end process;


    ap_block_state10_pp0_stage9_iter0_assign_proc : process(in_data_TVALID)
    begin
                ap_block_state10_pp0_stage9_iter0 <= (in_data_TVALID = ap_const_logic_0);
    end process;

        ap_block_state11_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, in_data_TVALID)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((in_data_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state2_io_assign_proc : process(out_data_TREADY, loop_read_reg_158)
    begin
                ap_block_state2_io <= (((out_data_TREADY = ap_const_logic_0) and (loop_read_reg_158 = ap_const_lv1_0)) or ((out_data_TREADY = ap_const_logic_0) and (loop_read_reg_158 = ap_const_lv1_1)));
    end process;


    ap_block_state2_pp0_stage1_iter0_assign_proc : process(in_data_TVALID)
    begin
                ap_block_state2_pp0_stage1_iter0 <= (in_data_TVALID = ap_const_logic_0);
    end process;


    ap_block_state3_io_assign_proc : process(out_data_TREADY, loop_read_reg_158)
    begin
                ap_block_state3_io <= (((out_data_TREADY = ap_const_logic_0) and (loop_read_reg_158 = ap_const_lv1_0)) or ((out_data_TREADY = ap_const_logic_0) and (loop_read_reg_158 = ap_const_lv1_1)));
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(in_data_TVALID)
    begin
                ap_block_state3_pp0_stage2_iter0 <= (in_data_TVALID = ap_const_logic_0);
    end process;


    ap_block_state4_io_assign_proc : process(out_data_TREADY, loop_read_reg_158)
    begin
                ap_block_state4_io <= (((out_data_TREADY = ap_const_logic_0) and (loop_read_reg_158 = ap_const_lv1_0)) or ((out_data_TREADY = ap_const_logic_0) and (loop_read_reg_158 = ap_const_lv1_1)));
    end process;


    ap_block_state4_pp0_stage3_iter0_assign_proc : process(in_data_TVALID)
    begin
                ap_block_state4_pp0_stage3_iter0 <= (in_data_TVALID = ap_const_logic_0);
    end process;


    ap_block_state5_io_assign_proc : process(out_data_TREADY, loop_read_reg_158)
    begin
                ap_block_state5_io <= (((out_data_TREADY = ap_const_logic_0) and (loop_read_reg_158 = ap_const_lv1_0)) or ((out_data_TREADY = ap_const_logic_0) and (loop_read_reg_158 = ap_const_lv1_1)));
    end process;


    ap_block_state5_pp0_stage4_iter0_assign_proc : process(in_data_TVALID)
    begin
                ap_block_state5_pp0_stage4_iter0 <= (in_data_TVALID = ap_const_logic_0);
    end process;


    ap_block_state6_pp0_stage5_iter0_assign_proc : process(in_data_TVALID)
    begin
                ap_block_state6_pp0_stage5_iter0 <= (in_data_TVALID = ap_const_logic_0);
    end process;


    ap_block_state7_pp0_stage6_iter0_assign_proc : process(in_data_TVALID)
    begin
                ap_block_state7_pp0_stage6_iter0 <= (in_data_TVALID = ap_const_logic_0);
    end process;


    ap_block_state8_pp0_stage7_iter0_assign_proc : process(in_data_TVALID)
    begin
                ap_block_state8_pp0_stage7_iter0 <= (in_data_TVALID = ap_const_logic_0);
    end process;


    ap_block_state9_pp0_stage8_iter0_assign_proc : process(in_data_TVALID)
    begin
                ap_block_state9_pp0_stage8_iter0 <= (in_data_TVALID = ap_const_logic_0);
    end process;


    ap_condition_376_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_01001)
    begin
                ap_condition_376 <= ((ap_const_boolean_0 = ap_block_pp0_stage5_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5));
    end process;


    ap_condition_382_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_01001)
    begin
                ap_condition_382 <= ((ap_const_boolean_0 = ap_block_pp0_stage6_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6));
    end process;


    ap_condition_388_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_01001)
    begin
                ap_condition_388 <= ((ap_const_boolean_0 = ap_block_pp0_stage7_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7));
    end process;


    ap_condition_394_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_01001)
    begin
                ap_condition_394 <= ((ap_const_boolean_0 = ap_block_pp0_stage8_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8));
    end process;


    ap_condition_400_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_01001)
    begin
                ap_condition_400 <= ((ap_const_boolean_0 = ap_block_pp0_stage9_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9));
    end process;


    ap_condition_406_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_406 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_541_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, loop_read_reg_158, ap_block_pp0_stage1_01001)
    begin
                ap_condition_541 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (loop_read_reg_158 = ap_const_lv1_0));
    end process;


    ap_condition_544_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, loop_read_reg_158, ap_block_pp0_stage1_01001)
    begin
                ap_condition_544 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (loop_read_reg_158 = ap_const_lv1_1));
    end process;


    ap_condition_548_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, loop_read_reg_158, ap_block_pp0_stage2_01001)
    begin
                ap_condition_548 <= ((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (loop_read_reg_158 = ap_const_lv1_0));
    end process;


    ap_condition_551_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, loop_read_reg_158, ap_block_pp0_stage2_01001)
    begin
                ap_condition_551 <= ((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (loop_read_reg_158 = ap_const_lv1_1));
    end process;


    ap_condition_555_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, loop_read_reg_158, ap_block_pp0_stage3_01001)
    begin
                ap_condition_555 <= ((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (loop_read_reg_158 = ap_const_lv1_0));
    end process;


    ap_condition_558_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, loop_read_reg_158, ap_block_pp0_stage3_01001)
    begin
                ap_condition_558 <= ((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (loop_read_reg_158 = ap_const_lv1_1));
    end process;


    ap_condition_562_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, loop_read_reg_158, ap_block_pp0_stage4_01001)
    begin
                ap_condition_562 <= ((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (loop_read_reg_158 = ap_const_lv1_0));
    end process;


    ap_condition_565_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, loop_read_reg_158, ap_block_pp0_stage4_01001)
    begin
                ap_condition_565 <= ((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (loop_read_reg_158 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= (((in_data_read_3_reg_195 & in_data_read_2_reg_189) & in_data_read_1_reg_168) & in_data_read_reg_162);

    in_data_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage9, in_data_TVALID, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            in_data_TDATA_blk_n <= in_data_TVALID;
        else 
            in_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_data_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_ce, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_ce)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            in_data_TREADY <= ap_const_logic_1;
        else 
            in_data_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    out_data_TDATA_assign_proc : process(ap_ce, in_data_read_reg_162, in_data_read_1_reg_168, p_s_reg_174, p_1_reg_179, p_2_reg_184, in_data_read_2_reg_189, in_data_read_3_reg_195, trunc_ln324_fu_67_p1, zext_ln324_fu_106_p1, zext_ln324_1_fu_114_p1, zext_ln324_2_fu_122_p1, zext_ln324_3_fu_130_p1, zext_ln324_4_fu_138_p1, zext_ln324_5_fu_154_p1, ap_condition_541, ap_condition_544, ap_condition_548, ap_condition_551, ap_condition_555, ap_condition_558, ap_condition_562, ap_condition_565, ap_condition_376, ap_condition_382, ap_condition_388, ap_condition_394, ap_condition_400, ap_condition_406)
    begin
        if ((ap_const_logic_1 = ap_ce)) then
            if ((ap_const_boolean_1 = ap_condition_406)) then 
                out_data_TDATA <= zext_ln324_5_fu_154_p1;
            elsif ((ap_const_boolean_1 = ap_condition_400)) then 
                out_data_TDATA <= zext_ln324_4_fu_138_p1;
            elsif ((ap_const_boolean_1 = ap_condition_394)) then 
                out_data_TDATA <= zext_ln324_3_fu_130_p1;
            elsif ((ap_const_boolean_1 = ap_condition_388)) then 
                out_data_TDATA <= zext_ln324_2_fu_122_p1;
            elsif ((ap_const_boolean_1 = ap_condition_382)) then 
                out_data_TDATA <= zext_ln324_1_fu_114_p1;
            elsif ((ap_const_boolean_1 = ap_condition_376)) then 
                out_data_TDATA <= zext_ln324_fu_106_p1;
            elsif ((ap_const_boolean_1 = ap_condition_565)) then 
                out_data_TDATA <= in_data_read_3_reg_195;
            elsif ((ap_const_boolean_1 = ap_condition_562)) then 
                out_data_TDATA <= p_2_reg_184;
            elsif ((ap_const_boolean_1 = ap_condition_558)) then 
                out_data_TDATA <= in_data_read_2_reg_189;
            elsif ((ap_const_boolean_1 = ap_condition_555)) then 
                out_data_TDATA <= p_1_reg_179;
            elsif ((ap_const_boolean_1 = ap_condition_551)) then 
                out_data_TDATA <= in_data_read_1_reg_168;
            elsif ((ap_const_boolean_1 = ap_condition_548)) then 
                out_data_TDATA <= p_s_reg_174;
            elsif ((ap_const_boolean_1 = ap_condition_544)) then 
                out_data_TDATA <= in_data_read_reg_162;
            elsif ((ap_const_boolean_1 = ap_condition_541)) then 
                out_data_TDATA <= trunc_ln324_fu_67_p1;
            else 
                out_data_TDATA <= "XXXXXXXX";
            end if;
        else 
            out_data_TDATA <= "XXXXXXXX";
        end if; 
    end process;


    out_data_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage9, out_data_TREADY, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_block_pp0_stage9, loop_read_reg_158)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (loop_read_reg_158 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (loop_read_reg_158 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (loop_read_reg_158 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (loop_read_reg_158 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (loop_read_reg_158 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (loop_read_reg_158 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (loop_read_reg_158 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (loop_read_reg_158 = ap_const_lv1_1)))) then 
            out_data_TDATA_blk_n <= out_data_TREADY;
        else 
            out_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_data_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_ce, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, loop_read_reg_158, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (loop_read_reg_158 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (loop_read_reg_158 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (loop_read_reg_158 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (loop_read_reg_158 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_ce) and (loop_read_reg_158 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_ce) and (loop_read_reg_158 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_ce) and (loop_read_reg_158 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_ce) and (loop_read_reg_158 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_data_TVALID <= ap_const_logic_1;
        else 
            out_data_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln324_1_fu_102_p1 <= in_data_TDATA(1 - 1 downto 0);
    trunc_ln324_2_fu_110_p1 <= in_data_TDATA(1 - 1 downto 0);
    trunc_ln324_3_fu_118_p1 <= in_data_TDATA(4 - 1 downto 0);
    trunc_ln324_4_fu_126_p1 <= in_data_TDATA(1 - 1 downto 0);
    trunc_ln324_5_fu_134_p1 <= in_data_TDATA(4 - 1 downto 0);
    trunc_ln324_6_fu_142_p1 <= in_data_TDATA(1 - 1 downto 0);
    trunc_ln324_fu_67_p1 <= ap_port_reg_value_r(8 - 1 downto 0);
    zext_ln324_1_fu_114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln324_2_reg_206),8));
    zext_ln324_2_fu_122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln324_3_reg_211),8));
    zext_ln324_3_fu_130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln324_4_reg_216),8));
    zext_ln324_4_fu_138_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln324_5_reg_221),8));
    zext_ln324_5_fu_154_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln324_6_reg_226),8));
    zext_ln324_fu_106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln324_1_reg_201),8));
end behav;
