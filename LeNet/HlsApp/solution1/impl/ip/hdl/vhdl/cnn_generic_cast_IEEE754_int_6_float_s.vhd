-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_generic_cast_IEEE754_int_6_float_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of cnn_generic_cast_IEEE754_int_6_float_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";

attribute shreg_extract : string;
    signal p_Result_s_reg_178 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_Result_s_reg_178_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_s_fu_66_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Repl2_s_reg_183 : STD_LOGIC_VECTOR (22 downto 0);
    signal isNeg_fu_80_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_188 : STD_LOGIC_VECTOR (0 downto 0);
    signal ush_fu_98_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_reg_193 : STD_LOGIC_VECTOR (8 downto 0);
    signal val_V_fu_160_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_V_reg_198 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Val2_s_fu_44_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_1_fu_56_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln340_fu_70_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln340_fu_74_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1311_fu_88_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1311_fu_94_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mantissa_V_fu_106_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sh_prom_i_i_cast_cast_cast_fu_119_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_115_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal sh_prom_i_i_cast_cast_cast_cast_fu_122_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_fu_126_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_fu_138_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_1_fu_132_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln662_fu_146_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_150_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_1_fu_167_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_172_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal x_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (31 downto 0);


begin




    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= p_Val2_3_fu_172_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                isNeg_reg_188 <= add_ln340_fu_74_p2(8 downto 8);
                p_Repl2_s_reg_183 <= p_Repl2_s_fu_66_p1;
                p_Result_s_reg_178 <= p_Val2_s_fu_44_p1(31 downto 31);
                p_Result_s_reg_178_pp0_iter1_reg <= p_Result_s_reg_178;
                ush_reg_193 <= ush_fu_98_p3;
                val_V_reg_198 <= val_V_fu_160_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                x_int_reg <= x;
            end if;
        end if;
    end process;
    add_ln340_fu_74_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(zext_ln340_fu_70_p1));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(p_Val2_3_fu_172_p3, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= p_Val2_3_fu_172_p3;
        end if; 
    end process;

    isNeg_fu_80_p3 <= add_ln340_fu_74_p2(8 downto 8);
    mantissa_V_fu_106_p4 <= ((ap_const_lv1_1 & p_Repl2_s_reg_183) & ap_const_lv1_0);
    p_Repl2_1_fu_56_p4 <= p_Val2_s_fu_44_p1(30 downto 23);
    p_Repl2_s_fu_66_p1 <= p_Val2_s_fu_44_p1(23 - 1 downto 0);
    p_Val2_3_fu_172_p3 <= 
        result_V_1_fu_167_p2 when (p_Result_s_reg_178_pp0_iter1_reg(0) = '1') else 
        val_V_reg_198;
    p_Val2_s_fu_44_p1 <= x_int_reg;
    r_V_1_fu_132_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_115_p1),to_integer(unsigned('0' & sh_prom_i_i_cast_cast_cast_cast_fu_122_p1(31-1 downto 0)))));
    r_V_fu_126_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_115_p1),to_integer(unsigned('0' & sh_prom_i_i_cast_cast_cast_cast_fu_122_p1(31-1 downto 0)))));
    result_V_1_fu_167_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_V_reg_198));
        sext_ln1311_fu_94_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1311_fu_88_p2),9));

    sh_prom_i_i_cast_cast_cast_cast_fu_122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_prom_i_i_cast_cast_cast_fu_119_p1),79));
        sh_prom_i_i_cast_cast_cast_fu_119_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_reg_193),32));

    sub_ln1311_fu_88_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(p_Repl2_1_fu_56_p4));
    tmp_1_fu_150_p4 <= r_V_1_fu_132_p2(55 downto 24);
    tmp_fu_138_p3 <= r_V_fu_126_p2(24 downto 24);
    ush_fu_98_p3 <= 
        sext_ln1311_fu_94_p1 when (isNeg_fu_80_p3(0) = '1') else 
        add_ln340_fu_74_p2;
    val_V_fu_160_p3 <= 
        zext_ln662_fu_146_p1 when (isNeg_reg_188(0) = '1') else 
        tmp_1_fu_150_p4;
    zext_ln15_fu_115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_V_fu_106_p4),79));
    zext_ln340_fu_70_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Repl2_1_fu_56_p4),9));
    zext_ln662_fu_146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_138_p3),32));
end behav;
