// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnn_generic_cast_IEEE754_int_6_float_s (
        ap_clk,
        ap_rst,
        x,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [31:0] x;
output  [31:0] ap_return;
input   ap_ce;

reg[31:0] ap_return;

reg   [0:0] p_Result_s_reg_178;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] p_Result_s_reg_178_pp0_iter1_reg;
wire   [22:0] p_Repl2_s_fu_66_p1;
reg   [22:0] p_Repl2_s_reg_183;
wire   [0:0] isNeg_fu_80_p3;
reg   [0:0] isNeg_reg_188;
wire   [8:0] ush_fu_98_p3;
reg   [8:0] ush_reg_193;
wire   [31:0] val_V_fu_160_p3;
reg   [31:0] val_V_reg_198;
wire    ap_block_pp0_stage0;
wire   [31:0] p_Val2_s_fu_44_p1;
wire   [7:0] p_Repl2_1_fu_56_p4;
wire   [8:0] zext_ln340_fu_70_p1;
wire   [8:0] add_ln340_fu_74_p2;
wire   [7:0] sub_ln1311_fu_88_p2;
wire  signed [8:0] sext_ln1311_fu_94_p1;
wire   [24:0] mantissa_V_fu_106_p4;
wire  signed [31:0] sh_prom_i_i_cast_cast_cast_fu_119_p1;
wire   [78:0] zext_ln15_fu_115_p1;
wire   [78:0] sh_prom_i_i_cast_cast_cast_cast_fu_122_p1;
wire   [78:0] r_V_fu_126_p2;
wire   [0:0] tmp_fu_138_p3;
wire   [78:0] r_V_1_fu_132_p2;
wire   [31:0] zext_ln662_fu_146_p1;
wire   [31:0] tmp_1_fu_150_p4;
wire   [31:0] result_V_1_fu_167_p2;
wire   [31:0] p_Val2_3_fu_172_p3;
reg    ap_ce_reg;
reg   [31:0] x_int_reg;
reg   [31:0] ap_return_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= p_Val2_3_fu_172_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        isNeg_reg_188 <= add_ln340_fu_74_p2[32'd8];
        p_Repl2_s_reg_183 <= p_Repl2_s_fu_66_p1;
        p_Result_s_reg_178 <= p_Val2_s_fu_44_p1[32'd31];
        p_Result_s_reg_178_pp0_iter1_reg <= p_Result_s_reg_178;
        ush_reg_193 <= ush_fu_98_p3;
        val_V_reg_198 <= val_V_fu_160_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        x_int_reg <= x;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = p_Val2_3_fu_172_p3;
    end
end

assign add_ln340_fu_74_p2 = ($signed(9'd385) + $signed(zext_ln340_fu_70_p1));

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign isNeg_fu_80_p3 = add_ln340_fu_74_p2[32'd8];

assign mantissa_V_fu_106_p4 = {{{{1'd1}, {p_Repl2_s_reg_183}}}, {1'd0}};

assign p_Repl2_1_fu_56_p4 = {{p_Val2_s_fu_44_p1[30:23]}};

assign p_Repl2_s_fu_66_p1 = p_Val2_s_fu_44_p1[22:0];

assign p_Val2_3_fu_172_p3 = ((p_Result_s_reg_178_pp0_iter1_reg[0:0] === 1'b1) ? result_V_1_fu_167_p2 : val_V_reg_198);

assign p_Val2_s_fu_44_p1 = x_int_reg;

assign r_V_1_fu_132_p2 = zext_ln15_fu_115_p1 << sh_prom_i_i_cast_cast_cast_cast_fu_122_p1;

assign r_V_fu_126_p2 = zext_ln15_fu_115_p1 >> sh_prom_i_i_cast_cast_cast_cast_fu_122_p1;

assign result_V_1_fu_167_p2 = (32'd0 - val_V_reg_198);

assign sext_ln1311_fu_94_p1 = $signed(sub_ln1311_fu_88_p2);

assign sh_prom_i_i_cast_cast_cast_cast_fu_122_p1 = $unsigned(sh_prom_i_i_cast_cast_cast_fu_119_p1);

assign sh_prom_i_i_cast_cast_cast_fu_119_p1 = $signed(ush_reg_193);

assign sub_ln1311_fu_88_p2 = (8'd127 - p_Repl2_1_fu_56_p4);

assign tmp_1_fu_150_p4 = {{r_V_1_fu_132_p2[55:24]}};

assign tmp_fu_138_p3 = r_V_fu_126_p2[32'd24];

assign ush_fu_98_p3 = ((isNeg_fu_80_p3[0:0] === 1'b1) ? sext_ln1311_fu_94_p1 : add_ln340_fu_74_p2);

assign val_V_fu_160_p3 = ((isNeg_reg_188[0:0] === 1'b1) ? zext_ln662_fu_146_p1 : tmp_1_fu_150_p4);

assign zext_ln15_fu_115_p1 = mantissa_V_fu_106_p4;

assign zext_ln340_fu_70_p1 = p_Repl2_1_fu_56_p4;

assign zext_ln662_fu_146_p1 = tmp_fu_138_p3;

endmodule //cnn_generic_cast_IEEE754_int_6_float_s
